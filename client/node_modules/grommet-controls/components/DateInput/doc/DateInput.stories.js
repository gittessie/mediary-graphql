var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { Box } from 'grommet';
import { DateInput } from '../DateInput';
import { smallDate } from '../../../utils/moment';
export default {
    title: 'CONTROLS/input/DateInput',
    component: DateInput,
};
var DateTestBed = function (_a) {
    var value = _a.value, rest = __rest(_a, ["value"]);
    var _b = React.useState(value), stateValue = _b[0], setValue = _b[1];
    return (React.createElement(Box, { direction: 'row' },
        React.createElement(Box, { basis: 'medium' },
            React.createElement(DateInput, __assign({ value: stateValue, onChange: function (_a) {
                    var target = _a.target;
                    return setValue(target.value);
                } }, rest)))));
};
export var main = function () { return React.createElement(DateTestBed, { value: smallDate(new Date()) }); };
export var autocorrect = function () { return React.createElement(DateTestBed, { value: smallDate(new Date()), autocorrect: true }); };
export var disabled = function () { return React.createElement(DateTestBed, { value: smallDate(new Date()), disabled: true }); };
export var bounds = function () { return (React.createElement(DateTestBed, { value: smallDate(new Date()), bounds: [
        smallDate(new Date(new Date().getFullYear(), 0, 1)),
        smallDate(new Date(new Date().getFullYear(), 11, 31)),
    ] })); };
export var disabledDates = function () { return (React.createElement(DateTestBed, { value: smallDate(new Date()), disabledDates: [
        smallDate(new Date()),
        smallDate((new Date()).setDate(new Date().getDate() - 1)),
    ] })); };
export var firstDayOfWeek = function () { return (React.createElement(DateTestBed, { value: smallDate(new Date()), firstDayOfWeek: 1 })); };
export var locale = function () { return (React.createElement(DateTestBed, { value: smallDate(new Date()), locale: 'de-DE' })); };
export var size = function () { return (React.createElement(DateTestBed, { value: smallDate(new Date()), size: 'medium' })); };
