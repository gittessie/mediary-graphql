var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React from 'react';
import { Box } from 'grommet';
import { Lock, Unlock } from 'grommet-icons';
import { PasswordInput } from '../PasswordInput';
export default {
    title: 'CONTROLS/input/PasswordInput',
    component: PasswordInput,
};
var PasswordTestBed = function (props) {
    var _a = React.useState('password'), password = _a[0], setPassword = _a[1];
    return (React.createElement(Box, { direction: 'row' },
        React.createElement(Box, { basis: 'medium' },
            React.createElement(PasswordInput, __assign({ value: password, onChange: function (_a) {
                    var value = _a.target.value;
                    return setPassword(value);
                } }, props)))));
};
export var main = function () { return React.createElement(PasswordTestBed, null); };
export var viewIcon = function () { return (React.createElement(PasswordTestBed, { viewIcon: React.createElement(Unlock, null), hideIcon: React.createElement(Lock, null), a11yTitle: 'enter password' })); };
