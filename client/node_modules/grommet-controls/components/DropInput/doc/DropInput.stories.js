var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React from 'react';
import { Box, Calendar } from 'grommet';
import { Calendar as CalendarIcon, Add, Subtract } from 'grommet-icons';
import { DropInput } from '../DropInput';
import { smallDate } from '../../../utils/moment';
export default {
    title: 'CONTROLS/input/DropInput',
    component: DropInput,
};
var DateInput = function (props) {
    var _a = React.useState(smallDate(new Date())), date = _a[0], setDate = _a[1];
    return (React.createElement(Box, { direction: 'row' },
        React.createElement(Box, { basis: 'medium' },
            React.createElement(DropInput, __assign({ dropContent: (React.createElement(Box, { pad: 'small' },
                    React.createElement(Calendar, { size: 'small', date: date, onSelect: function (isoDate) { return setDate(smallDate(new Date(isoDate))); } }))), value: date, onChange: function (_a) {
                    var target = _a.target;
                    return setDate(target.value);
                } }, props)))));
};
var NumberInput = function () {
    var _a = React.useState(10), number = _a[0], setNumber = _a[1];
    return (React.createElement(Box, { direction: 'row' },
        React.createElement(Box, { basis: 'medium' },
            React.createElement(DropInput, { value: number, onChange: function (_a) {
                    var value = _a.target.value;
                    return setNumber(parseFloat(value));
                }, widgets: [
                    {
                        icon: React.createElement(Add, null),
                        onClick: function () { return setNumber(number + 1); },
                    },
                    {
                        icon: React.createElement(Subtract, null),
                        onClick: function () { return setNumber(number - 1); },
                    },
                ] }))));
};
var DropInputTest = function (props) {
    return (React.createElement(Box, { direction: 'row' },
        React.createElement(Box, { basis: 'medium' },
            React.createElement(DropInput, __assign({}, props)))));
};
export var main = function () { return (React.createElement(DateInput, null)); };
export var a11yTitle = function () { return (React.createElement(DateInput, { a11yTitle: 'Birthdy date' })); };
export var disabled = function () { return (React.createElement(DateInput, { disabled: true })); };
export var dropContent = function () { return (React.createElement(DropInputTest, { a11yDropTitle: 'Open calendar', dropContent: (React.createElement(Box, { pad: 'small' },
        React.createElement(Calendar, { size: 'small' }))), defaultValue: smallDate(new Date()) })); };
export var dropIcon = function () { return (React.createElement(DateInput, { dropIcon: React.createElement(CalendarIcon, null) })); };
export var widgets = function () { return React.createElement(NumberInput, null); };
export var plain = function () { return (React.createElement(DropInputTest, { plain: true, defaultValue: 'Plain no focus' })); };
export var focusIndicator = function () { return (React.createElement(DropInputTest, { plain: true, focusIndicator: true, defaultValue: 'Plain with focus' })); };
export var placeholder = function () { return (React.createElement(DropInputTest, { placeholder: 'Enter phone...' })); };
export var name = function () { return (React.createElement(DropInputTest, { id: 'date-id', name: 'date-name' })); };
