import React, { Component } from 'react';
import { IDropInputProps } from './DropInputProps';
interface IDropInputState {
    open?: boolean;
    value?: string | number;
    defaultValue?: string | number;
}
/**
*  An Input control with an optional drop button with the specified 'dropContent' or widgets<br/>
*`import { DropInput } from 'grommet-controls';`<br/>
*`<DropInput`<br/>
*&nbsp;&nbsp;`dropContent={(`<br/>
*&nbsp;&nbsp;&nbsp;&nbsp;`...`<br/>
*&nbsp;&nbsp;`]}`<br/>
*`/>`<br/>
*/
declare class DropInput extends Component<IDropInputProps, IDropInputState> {
    static defaultProps: {
        dropAlign: {
            top: string;
            right: string;
        };
        dropIcon: JSX.Element;
        type: string;
        widgets: any[];
    };
    state: IDropInputState;
    inputRef: React.RefObject<HTMLInputElement>;
    static getDerivedStateFromProps(newProps: IDropInputProps, oldState: IDropInputState): IDropInputState;
    onUpdateValue: (value: any) => void;
    onOpen: (e: any) => void;
    onClose: (e: any) => void;
    onKeyDown: (e: any) => void;
    onKeyUp: (e: any) => void;
    render(): JSX.Element;
}
export { DropInput };
