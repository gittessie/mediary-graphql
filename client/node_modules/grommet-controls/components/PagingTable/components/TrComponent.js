var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React, { Component } from 'react';
import { findDOMNode } from 'react-dom';
import { Keyboard } from 'grommet';
import { focusedChildIndex, focusChildByIndex, focusNextElement, focusPrevElement, hasKeyboardChildren, } from '../DOM';
import { StyledTrComponent } from '../StyledTableComponents';
var TrComponent = /** @class */ (function (_super) {
    __extends(TrComponent, _super);
    function TrComponent() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.selectNextRow = function () {
            var selectRow = _this.props.selectRow;
            var activeChild = focusedChildIndex(_this.container);
            return selectRow(true, activeChild);
        };
        _this.selectPrevRow = function () {
            var selectRow = _this.props.selectRow;
            var activeChild = focusedChildIndex(_this.container);
            return selectRow(false, activeChild);
        };
        _this.selectNextChild = function () {
            if (focusNextElement(_this.container)) {
                return true;
            }
            return _this.selectNextRow();
        };
        _this.selectPrevChild = function () {
            if (focusPrevElement(_this.container)) {
                return true;
            }
            return _this.selectPrevRow();
        };
        _this.selectFirstChild = function (activeIndex) { return focusChildByIndex(_this.container, activeIndex); };
        return _this;
    }
    TrComponent.prototype.render = function () {
        var _this = this;
        return (React.createElement(Keyboard, { onTab: function (e) {
                e.preventDefault();
                if (e.shiftKey) {
                    _this.selectPrevChild();
                }
                else {
                    _this.selectNextChild();
                }
            }, onLeft: function (e) {
                if (!hasKeyboardChildren(document.activeElement)) {
                    e.preventDefault();
                    _this.selectPrevChild();
                }
            }, onRight: function (e) {
                if (!hasKeyboardChildren(document.activeElement)) {
                    e.preventDefault();
                    _this.selectNextChild();
                }
            }, onUp: function (e) {
                if (!hasKeyboardChildren(document.activeElement)) {
                    e.preventDefault();
                    _this.selectPrevRow();
                }
            }, onDown: function (e) {
                if (!hasKeyboardChildren(document.activeElement)) {
                    e.preventDefault();
                    _this.selectNextRow();
                }
            } },
            React.createElement(StyledTrComponent, __assign({ direction: 'row', role: 'row', ref: function (el) { _this.container = findDOMNode(el); } }, this.props))));
    };
    return TrComponent;
}(Component));
export default TrComponent;
