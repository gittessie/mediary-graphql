import React, { Component } from 'react';
interface IPaginationProps {
    page: number;
    pages: number;
    canPrevious: boolean;
    canNext: boolean;
    onPageChange: (page: number) => void;
    onPageSizeChange: (newPageSize: number) => void;
    showPageJump: boolean;
    pageText: string;
    ofText: string;
    showPageSizeOptions: boolean;
    pageSizeOptions: string[];
    pageSize: number;
    rowsText: string;
    PreviousComponent?: React.ElementType;
    previousText: string;
    NextComponent?: React.ElementType;
    nextText: string;
    getPaginationProps: (props: IPaginationProps) => IPaginationProps;
}
interface IPaginationState {
    page: number | string;
}
export default class ReactTablePagination extends Component<IPaginationProps, IPaginationState> {
    constructor(props: any, context: any);
    static getDerivedStateFromProps(nextProps: any): {
        page: any;
    };
    getSafePage: (page: any) => number;
    changePage: (page: any) => void;
    applyPage: (e: any) => void;
    renderPaging(): JSX.Element;
    renderPageSize(): JSX.Element;
    renderPrevious(): JSX.Element;
    renderNext(): JSX.Element;
    render(): JSX.Element;
}
export {};
