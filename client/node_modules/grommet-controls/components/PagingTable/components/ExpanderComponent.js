var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { Add } from 'grommet-icons/icons/Add';
import { Subtract } from 'grommet-icons/icons/Subtract';
import { StyledExpander } from '../StyledTableComponents';
export default (function (_a) {
    var isExpanded = _a.isExpanded, children = _a.children, expanderProps = _a.expanderProps;
    var props = __assign({
        CloseIcon: React.createElement(Subtract, null),
        OpenIcon: React.createElement(Add, null),
        tabIndex: 0,
        onClick: function () { },
    }, expanderProps);
    var OpenIcon = props.OpenIcon, CloseIcon = props.CloseIcon, rest = __rest(props, ["OpenIcon", "CloseIcon"]);
    return (React.createElement(StyledExpander, __assign({ a11yTitle: 'Press Enter to expand this row for more information', icon: isExpanded ? CloseIcon : OpenIcon }, rest), children));
});
