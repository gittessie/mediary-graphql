declare function isArray(a: any): boolean;
declare function get(obj: object, path: string | string[], def?: object): object;
declare function set(obj: {}, path: any, value: any): {};
declare function range(n: any): any[];
declare function orderBy(arr: any, funcs: any, dirs: any, indexKey: any): any;
declare function remove(a: any, b: any): any;
declare function clone(a: any): any;
declare function getFirstDefined(...args: any[]): any;
declare function sum(arr: any): any;
declare function groupBy(xs: any, key: any): any;
declare function asPx(value: any): string;
declare function compactObject(obj: any): {};
declare function isSortingDesc(d: any): boolean;
declare function normalizeComponent(Comp: any, params?: {}, fallback?: any): any;
declare const _default: {
    get: typeof get;
    set: typeof set;
    orderBy: typeof orderBy;
    range: typeof range;
    remove: typeof remove;
    clone: typeof clone;
    getFirstDefined: typeof getFirstDefined;
    sum: typeof sum;
    groupBy: typeof groupBy;
    isArray: typeof isArray;
    compactObject: typeof compactObject;
    isSortingDesc: typeof isSortingDesc;
    normalizeComponent: typeof normalizeComponent;
    asPx: typeof asPx;
};
export default _default;
