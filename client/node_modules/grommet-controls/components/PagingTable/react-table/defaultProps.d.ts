/// <reference types="react" />
import TableComponent from '../components/TableComponent';
import Pagination from '../components/Pagination';
import TrComponent from '../components/TrComponent';
export declare const expanderTdDefaultProps: {
    pad: any;
};
declare const _default: {
    data: any[];
    loading: boolean;
    showPagination: boolean;
    showPaginationTop: boolean;
    showPaginationBottom: boolean;
    showPageSizeOptions: boolean;
    pageSizeOptions: number[];
    defaultPageSize: number;
    showPageJump: boolean;
    collapseOnSortingChange: boolean;
    collapseOnPageChange: boolean;
    collapseOnDataChange: boolean;
    freezeWhenExpanded: boolean;
    sortable: boolean;
    multiSort: boolean;
    resizable: boolean;
    filterable: boolean;
    defaultSortDesc: boolean;
    defaultSorted: any[];
    defaultFiltered: any[];
    defaultResized: any[];
    defaultExpanded: {};
    defaultFilterMethod: (filter: any, row: any, _column: any) => boolean;
    defaultSortMethod: (a: any, b: any, _desc: any) => 1 | 0 | -1;
    onPageChange: any;
    onPageSizeChange: any;
    onSortedChange: any;
    onFilteredChange: any;
    onResizedChange: any;
    onExpandedChange: any;
    pivotBy: any;
    pivotValKey: string;
    pivotIDKey: string;
    subRowsKey: string;
    aggregatedKey: string;
    nestingLevelKey: string;
    originalKey: string;
    indexKey: string;
    groupedByPivotKey: string;
    onFetchData: () => any;
    getProps: ({ className }: {
        className: any;
    }) => {
        className: any;
    };
    getTableProps: ({ decorations }: {
        decorations: any;
    }) => any;
    getTheadGroupProps: ({ decorations }: {
        decorations: any;
    }) => any;
    getTheadGroupTrProps: () => {};
    getTheadProps: () => {};
    getTheadTrProps: () => {};
    getTheadThProps: ({ decorations }: {
        decorations: any;
    }) => any;
    getTheadFilterProps: () => {};
    getTheadFilterTrProps: ({ decorations }: {
        decorations: any;
    }) => any;
    getFilterInputProps: ({ decorations }: {
        decorations: any;
    }) => any;
    getTheadFilterThProps: ({ decorations }: {
        decorations: any;
    }) => any;
    getTbodyProps: ({ decorations }: {
        decorations: any;
    }) => any;
    getTrGroupProps: () => {};
    getTrProps: (even: any, { decorations }: {
        decorations: any;
    }) => any;
    getTdProps: ({ decorations }: {
        decorations: any;
    }) => any;
    getExpanderProps: ({ decorations }: {
        decorations: any;
    }) => any;
    getTfootProps: () => {};
    getTfootTrProps: () => {};
    getTfootTdProps: ({ decorations }: {
        decorations: any;
    }) => any;
    getPaginationProps: ({ decorations }: {
        decorations: any;
    }) => any;
    getLoadingProps: () => {};
    getNoDataProps: () => {};
    getResizerProps: () => {};
    column: {
        Cell: any;
        Header: any;
        Footer: any;
        Aggregated: any;
        Pivot: any;
        PivotValue: any;
        Expander: any;
        Filter: any;
        sortable: any;
        resizable: any;
        filterable: any;
        show: boolean;
        minWidth: number;
        getProps: (_state: any, _rowInfo: any, column: any) => any;
        aggregate: any;
        getHeaderProps: (_state: any, _rowInfo: any, column: any) => any;
        getFilterProps: (_state: any, _rowInfo: any, column: any) => any;
        getFooterProps: (_state: any, _rowInfo: any, column: any) => any;
        filterMethod: any;
        filterAll: boolean;
        sortMethod: any;
    };
    expanderDefaults: {
        sortable: boolean;
        resizable: boolean;
        filterable: boolean;
        width: number;
    };
    pivotDefaults: {};
    previousText: string;
    nextText: string;
    loadingText: string;
    noDataText: string;
    pageText: string;
    ofText: string;
    rowsText: string;
    TableComponent: typeof TableComponent;
    TheadComponent: (props: any) => JSX.Element;
    TbodyComponent: (props: any) => JSX.Element;
    TrGroupComponent: (props: any) => JSX.Element;
    TrComponent: typeof TrComponent;
    ThComponent: ({ toggleSort, sort, resizable, children, pivot, hidden, sortable, expander, CellTextComponent, ...props }: import("../StyledTableComponents").ThComponentProps) => JSX.Element;
    TdComponent: ({ children, ...props }: {
        [x: string]: any;
        children: any;
    }) => JSX.Element;
    CellTextComponent: ({ value, ...rest }: {
        [x: string]: any;
        value: any;
    }) => JSX.Element;
    TfootComponent: (props: any) => JSX.Element;
    FilterComponent: ({ filter, onChange, column, ...rest }: {
        [x: string]: any;
        filter: any;
        onChange: any;
        column: any;
    }) => JSX.Element;
    ExpanderComponent: ({ isExpanded, children, expanderProps }: import("..").IExpanderComponentProps) => JSX.Element;
    PivotValueComponent: ({ subRows, value }: import("..").IPivotValueComponentProps) => JSX.Element;
    AggregatedComponent: ({ subRows, column }: {
        subRows: any;
        column: any;
    }) => JSX.Element;
    PivotComponent: any;
    PaginationComponent: typeof Pagination;
    PreviousComponent: any;
    NextComponent: any;
    LoadingComponent: ({ loading }: {
        loading: any;
    }) => JSX.Element;
    NoDataComponent: ({ children, ...rest }: {
        [x: string]: any;
        children: any;
    }) => JSX.Element;
    ResizerComponent: (props: any) => JSX.Element;
    PadRowComponent: () => JSX.Element;
};
export default _default;
