var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import { Box, Text } from 'grommet';
import { ImageStamp } from '../ImageStamp';
/**
* An image with some text, can be used as a user Avatar image<br/>
* `import { Avatar } from 'grommet-controls;'`<br/>
* `<Avatar image='...' />`<br/>
*/
var Avatar = function (_a) {
    var image = _a.image, title = _a.title, subTitle = _a.subTitle, rest = __rest(_a, ["image", "title", "subTitle"]);
    return (React.createElement(Box, { direction: 'row', align: 'center', gap: 'small' },
        React.createElement(ImageStamp, __assign({ src: image, round: 'full' }, rest)),
        React.createElement(Box, { justify: 'between' },
            React.createElement(Text, { weight: 'bold', truncate: true }, title),
            React.createElement(Text, { size: 'small', truncate: true }, subTitle))));
};
export { Avatar };
