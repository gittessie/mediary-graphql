var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React from 'react';
import { Box } from 'grommet';
import { AddCircle, SubtractCircle } from 'grommet-icons';
import { NumberInput } from '../NumberInput';
export default {
    title: 'CONTROLS/input/NumberInput',
    component: NumberInput,
};
export var main = function () {
    var _a = React.useState('12000.34'), number = _a[0], setNumber = _a[1];
    return (React.createElement(Box, { direction: 'row' },
        React.createElement(Box, { basis: 'medium', gap: 'small' },
            React.createElement(NumberInput, { value: number, thousandsSeparatorSymbol: ',', onChange: function (_a) {
                    var value = _a.target.value;
                    return setNumber(value);
                } }))));
};
var IntegerInput = function (props) {
    var _a = React.useState('5'), number = _a[0], setNumber = _a[1];
    return (React.createElement(Box, { direction: 'row' },
        React.createElement(Box, { basis: 'medium', gap: 'small' },
            React.createElement(NumberInput, __assign({ value: number, step: 1, onChange: function (_a) {
                    var value = _a.target.value;
                    return setNumber(value);
                } }, props)))));
};
var FloatInput = function (props) {
    var _a = React.useState('2000.23'), number = _a[0], setNumber = _a[1];
    return (React.createElement(Box, { direction: 'row' },
        React.createElement(Box, { basis: 'medium', gap: 'small' },
            React.createElement(NumberInput, __assign({ value: number, step: 1, onChange: function (_a) {
                    var value = _a.target.value;
                    return setNumber(value);
                } }, props)))));
};
export var a11yIncrement = function () { return (React.createElement(IntegerInput, { a11yIncrement: 'Add to entry', step: 10, a11yDecrement: 'Remove from entry', thousandsSeparatorSymbol: ',' })); };
export var min = function () { return (React.createElement(IntegerInput, { min: 5 })); };
export var max = function () { return (React.createElement(IntegerInput, { max: 5 })); };
export var step = function () { return (React.createElement(IntegerInput, { step: 10 })); };
export var disabled = function () { return (React.createElement(IntegerInput, { disabled: true })); };
export var addIcon = function () { return (React.createElement(IntegerInput, { addIcon: React.createElement(AddCircle, null), subtractIcon: React.createElement(SubtractCircle, null) })); };
export var prefix = function () { return (React.createElement(IntegerInput, { prefix: '$' })); };
export var suffix = function () { return (React.createElement(IntegerInput, { suffix: ' USD' })); };
export var thousandsSeparatorSymbol = function () { return (React.createElement(FloatInput, { thousandsSeparatorSymbol: ' ', decimalSymbol: ',', updateToString: true })); };
export var decimalSymbol = function () { return (React.createElement(FloatInput, { thousandsSeparatorSymbol: '', decimalSymbol: ',', updateToString: true })); };
export var decimals = function () { return (React.createElement(FloatInput, { decimals: 4 })); };
export var integers = function () { return (React.createElement(IntegerInput, { integers: 4 })); };
