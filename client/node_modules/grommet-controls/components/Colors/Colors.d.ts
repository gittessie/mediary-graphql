import React, { Component } from 'react';
import { IColorsProps } from './ColorsProps';
interface IColor {
    color: string;
    name?: string;
    buttonRef: React.RefObject<HTMLButtonElement>;
}
interface IColors {
    colors: IColor[];
    name?: string;
}
interface IColorsState {
    colors?: IColors[];
    colorRows: IColors[];
    activeRow: number;
    activeColor: number;
}
/** A color selection element, with custom color palettes.<br/>
*`import { Colors } from 'grommet-controls';`<br/>
*`<Colors colors={...} />`<br/>
*/
declare class Colors extends Component<IColorsProps, IColorsState> {
    static defaultProps: {
        size: string;
    };
    setFocus: boolean;
    timer: number;
    constructor(props: any);
    static getDerivedStateFromProps(nextProps: any): IColorsState;
    componentDidUpdate(): void;
    componentWillUnmount(): void;
    setActive: ({ rowIndex, colorIndex }: {
        rowIndex: any;
        colorIndex: any;
    }) => void;
    onClickColor: ({ color, rowIndex, colorIndex, rowName, colorName, }: {
        color: any;
        rowIndex: any;
        colorIndex: any;
        rowName: any;
        colorName: any;
    }) => () => void;
    render(): JSX.Element;
}
export { Colors };
