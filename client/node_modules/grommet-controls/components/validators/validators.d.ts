import { FormErrorMessageType } from '../Form/FormProps';
export declare const validators: {
    required: (message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    email: (message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    url: (message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    defaultRequired: (message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    notEmptyString: (message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    numeric: (message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    alpha: (message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    alphaNumeric: (message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    int: (message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    float: (message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    words: (message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    length: (length: number, message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    minLength: (length: number, message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    maxLength: (length: number, message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    equals: (value: any, message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    equalsField: (field: any, fieldLabel: any, message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    True: (message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    False: (message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    bigger: (value: number, message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    biggerOrEqual: (value: number, message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    smaller: (value: number, message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    smallerOrEqual: (value: number, message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
    startsWith: (value: string, message?: FormErrorMessageType) => (dataRow: object, value: any, index?: number) => FormErrorMessageType;
};
