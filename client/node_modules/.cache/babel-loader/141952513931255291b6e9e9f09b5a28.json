{"ast":null,"code":"var _jsxFileName = \"/Users/tessie/Documents/mediary-graphql/client/src/components/Authentication/Login.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { TextInput, Button } from \"grommet\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [isButtonDisabled, setButtonDisabled] = useState(true);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    if (email.trim() && password.trim()) {\n      setButtonDisabled(false);\n    } else {\n      setButtonDisabled(true);\n    }\n  }, [email, password]);\n\n  const handleLogin = async () => {\n    setLoading(true);\n    const response = {\n      code: 200\n    };\n\n    if (response.code === 200) {//login\n    } else {\n      setError(\"Invalid credentials.\");\n    }\n  };\n\n  const handleKeyPress = e => {\n    if (e.keyCode === 13 || e.which === 13) {\n      isButtonDisabled || handleLogin();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }, \"Loading...\"), error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"emailInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(TextInput, {\n    id: \"emailInput\",\n    onChange: e => setEmail(e.target.value),\n    onKeyPress: e => handleKeyPress(e),\n    name: \"email\",\n    value: email,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"passwordInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(TextInput, {\n    id: \"passwordInput\",\n    onChange: e => setPassword(e.target.value),\n    onKeyPress: e => handleKeyPress(e),\n    name: \"password\",\n    value: password,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleLogin(),\n    disabled: isButtonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/auth/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Create an Account\"));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/tessie/Documents/mediary-graphql/client/src/components/Authentication/Login.tsx"],"names":["React","useEffect","useState","Link","TextInput","Button","Login","email","setEmail","password","setPassword","isButtonDisabled","setButtonDisabled","isLoading","setLoading","error","setError","trim","handleLogin","response","code","handleKeyPress","e","keyCode","which","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,SAAlC;;AAEA,MAAMC,KAAe,GAAG,MAAM;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAS,EAAT,CAAxC;AACA,QAAM,CAACS,gBAAD,EAAmBC,iBAAnB,IAAwCV,QAAQ,CAAU,IAAV,CAAtD;AACA,QAAM,CAACW,SAAD,EAAYC,UAAZ,IAA0BZ,QAAQ,CAAU,KAAV,CAAxC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAS,EAAT,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,KAAK,CAACU,IAAN,MAAgBR,QAAQ,CAACQ,IAAT,EAApB,EAAqC;AACnCL,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,KAFD,MAEO;AACLA,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD;AACF,GANQ,EAMN,CAACL,KAAD,EAAQE,QAAR,CANM,CAAT;;AAQA,QAAMS,WAAW,GAAG,YAA2B;AAC7CJ,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,UAAMK,QAAQ,GAAG;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAjB;;AACA,QAAID,QAAQ,CAACC,IAAT,KAAkB,GAAtB,EAA2B,CACzB;AACD,KAFD,MAEO;AACLJ,MAAAA,QAAQ,CAAC,sBAAD,CAAR;AACD;AACF,GARD;;AAUA,QAAMK,cAAc,GAAIC,CAAD,IAAoD;AACzE,QAAIA,CAAC,CAACC,OAAF,KAAc,EAAd,IAAoBD,CAAC,CAACE,KAAF,KAAY,EAApC,EAAwC;AACtCb,MAAAA,gBAAgB,IAAIO,WAAW,EAA/B;AACD;AACF,GAJD;;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADlB,EAEGE,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,KAAN,CAFZ,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,YADL;AAEE,IAAA,QAAQ,EAAGO,CAAD,IAAad,QAAQ,CAACc,CAAC,CAACG,MAAF,CAASC,KAAV,CAFjC;AAGE,IAAA,UAAU,EAAGJ,CAAD,IAAaD,cAAc,CAACC,CAAD,CAHzC;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,KAAK,EAAEf,KALT;AAME,IAAA,IAAI,EAAC,MANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAaE;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,eADL;AAEE,IAAA,QAAQ,EAAGe,CAAD,IAAaZ,WAAW,CAACY,CAAC,CAACG,MAAF,CAASC,KAAV,CAFpC;AAGE,IAAA,UAAU,EAAGJ,CAAD,IAAaD,cAAc,CAACC,CAAD,CAHzC;AAIE,IAAA,IAAI,EAAC,UAJP;AAKE,IAAA,KAAK,EAAEb,QALT;AAME,IAAA,IAAI,EAAC,UANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,eAuBE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAqBS,WAAW,EAD3C;AAEE,IAAA,QAAQ,EAAEP,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAvBF,eA8BE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBA9BF,CADF;AAkCD,CAjED;;AAmEA,eAAeL,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { TextInput, Button } from \"grommet\";\n\nconst Login: React.FC = () => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [isButtonDisabled, setButtonDisabled] = useState<boolean>(true);\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (email.trim() && password.trim()) {\n      setButtonDisabled(false);\n    } else {\n      setButtonDisabled(true);\n    }\n  }, [email, password]);\n\n  const handleLogin = async (): Promise<void> => {\n    setLoading(true);\n    const response = { code: 200 };\n    if (response.code === 200) {\n      //login\n    } else {\n      setError(\"Invalid credentials.\");\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.keyCode === 13 || e.which === 13) {\n      isButtonDisabled || handleLogin();\n    }\n  };\n\n  return (\n    <div>\n        {isLoading && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n      <h1>Sign In</h1>\n      <label htmlFor=\"emailInput\">Email</label>\n      <TextInput\n        id=\"emailInput\"\n        onChange={(e): void => setEmail(e.target.value)}\n        onKeyPress={(e): void => handleKeyPress(e)}\n        name=\"email\"\n        value={email}\n        type=\"text\"\n      />\n      <label htmlFor=\"passwordInput\">Password</label>\n      <TextInput\n        id=\"passwordInput\"\n        onChange={(e): void => setPassword(e.target.value)}\n        onKeyPress={(e): void => handleKeyPress(e)}\n        name=\"password\"\n        value={password}\n        type=\"password\"\n      />\n\n      <Button\n        onClick={(): Promise<void> => handleLogin()}\n        disabled={isButtonDisabled}\n      >\n        Sign In\n      </Button>\n\n      <Link to='/auth/register'>Create an Account</Link>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}