{"ast":null,"code":"import { css } from 'styled-components';\nimport { colorIsDark, getRGBA, normalizeColor } from './colors'; // evalStyle() converts a styled-components item into a string\n\nvar evalStyle = function evalStyle(arg, theme) {\n  if (arg && Array.isArray(arg) && typeof arg[0] === 'function') {\n    return arg[0]({\n      theme: theme\n    });\n  }\n\n  return arg;\n};\n\nexport var normalizeBackground = function normalizeBackground(background, theme) {\n  // If the background has a light or dark object, use that\n  var result = background;\n\n  if (background) {\n    if (theme.dark && background.dark && typeof background.dark !== 'boolean') {\n      result = background.dark;\n    } else if (!theme.dark && background.light && typeof background.light !== 'boolean') {\n      result = background.light;\n    }\n\n    result = evalStyle(result, theme);\n  }\n\n  return result;\n};\nexport var backgroundIsDark = function backgroundIsDark(backgroundArg, theme) {\n  var background = normalizeBackground(backgroundArg, theme);\n  var result;\n\n  if (background) {\n    if (typeof background === 'object') {\n      var color = background.color,\n          dark = background.dark,\n          opacity = background.opacity;\n\n      if (typeof dark === 'boolean') {\n        result = dark;\n      } else if (color && ( // weak opacity means we keep the existing darkness\n      !opacity || opacity !== 'weak')) {\n        var backgroundColor = normalizeColor(background.color, theme);\n\n        if (backgroundColor) {\n          result = colorIsDark(backgroundColor);\n        }\n      }\n    } else {\n      var _color = normalizeColor(background, theme);\n\n      if (_color) {\n        result = colorIsDark(_color);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar darkContext = function darkContext(backgroundColor) {\n  var isDark = colorIsDark(backgroundColor);\n  if (isDark === undefined) return undefined;\n  return isDark ? 'dark' : 'light';\n}; // Returns an array of two CSS colors: [background, color]\n// Either could be undefined.\n// background could be a CSS gradient, like \"linear-gradient(...)\"\n\n\nexport var backgroundAndTextColors = function backgroundAndTextColors(backgroundArg, textArg, theme) {\n  if (!backgroundArg) return [undefined, textArg];\n  var global = theme.global;\n  var background = normalizeBackground(backgroundArg, theme);\n  var text = textArg || global.colors.text;\n  var backgroundColor;\n  var textColor;\n\n  if (typeof background === 'object') {\n    if (background.dark === false) {\n      textColor = text.light || text;\n    } else if (background.dark) {\n      textColor = text.dark || text;\n    }\n\n    if (background.color) {\n      var color = normalizeColor(background.color, theme, background.dark);\n      var opacity = background.opacity === true ? global.opacity.medium : global.opacity[background.opacity] || background.opacity;\n      backgroundColor = getRGBA(color, opacity) || color; // If we don't have a textColor already, and we aren't too translucent,\n      // set the textColor to have the best contrast against the background\n      // color.\n\n      if (!textColor && (opacity === undefined || opacity > 0.3)) {\n        var shade = darkContext(backgroundColor, theme);\n        textColor = normalizeColor(shade && text[shade] || text, theme);\n      }\n    }\n  } else {\n    backgroundColor = normalizeColor(background, theme);\n\n    var _shade = darkContext(backgroundColor, theme);\n\n    if (_shade) {\n      textColor = normalizeColor(text[_shade] || text, theme, _shade === 'dark');\n    } else {\n      // If we can't determine the shade, we assume this isn't a simple color.\n      // It could be a gradient. backgroundStyle() will take care of that case.\n      if (backgroundColor !== 'transparent') backgroundColor = undefined;\n      if (text) textColor = normalizeColor(text, theme);\n    }\n  } // if textArg is false, we don't want the textColor, used for Button hover\n\n\n  if (textArg === false) textColor = undefined;\n  return [backgroundColor, textColor];\n};\nexport var backgroundStyle = function backgroundStyle(backgroundArg, theme, textColorArg) {\n  // for Grommet component, if the background isn't defined, don't set it\n  if (backgroundArg === undefined) return undefined;\n  var background = normalizeBackground(backgroundArg, theme);\n\n  if (typeof background === 'string' && background.lastIndexOf('url', 0) === 0) {\n    return css([\"background:\", \" no-repeat center center;background-size:cover;\"], background);\n  }\n\n  var _backgroundAndTextCol = backgroundAndTextColors(background, textColorArg, theme),\n      backgroundColor = _backgroundAndTextCol[0],\n      textColor = _backgroundAndTextCol[1];\n\n  if (background.image) {\n    // allow both background color and image, in case the image doesn't fill\n    return css([\"background-image:\", \";background-repeat:\", \";background-position:\", \";background-size:\", \";\", \" \", \"\"], background.image, background.repeat || 'no-repeat', background.position || 'center center', background.size || 'cover', backgroundColor ? \"background-color: \" + backgroundColor + \";\" : '', textColor ? \"color: \" + textColor + \";\" : '');\n  }\n\n  if (backgroundColor) {\n    return css([\"background-color:\", \";\", \"\"], backgroundColor, textColor ? \"color: \" + textColor + \";\" : '');\n  }\n\n  if (typeof background === 'string') // This case takes care of gradients\n    // or theme colors that use CSS names like 'crimson' that we don't parse\n    return css([\"background:\", \";\"], normalizeColor(background, theme));\n  return undefined;\n};\nexport var activeStyle = css([\"\", \"\"], function (props) {\n  return backgroundStyle(normalizeColor(props.theme.global.active.background, props.theme), props.theme, props.theme.global.active.color);\n});\nexport var selectedStyle = css([\"\", \"\"], function (props) {\n  return backgroundStyle(normalizeColor(props.theme.global.selected.background, props.theme), props.theme, props.theme.global.selected.color);\n});\nexport var getHoverIndicatorStyle = function getHoverIndicatorStyle(hoverIndicator, theme) {\n  var background;\n\n  if (hoverIndicator === true || hoverIndicator === 'background') {\n    background = theme.global.hover.background;\n  } else {\n    background = hoverIndicator;\n  }\n\n  return css([\"\", \"\"], backgroundStyle(background, theme, theme.global.hover.color));\n};","map":{"version":3,"sources":["/Users/tessie/Documents/mediary-graphql/client/node_modules/grommet/es6/utils/background.js"],"names":["css","colorIsDark","getRGBA","normalizeColor","evalStyle","arg","theme","Array","isArray","normalizeBackground","background","result","dark","light","backgroundIsDark","backgroundArg","color","opacity","backgroundColor","_color","darkContext","isDark","undefined","backgroundAndTextColors","textArg","global","text","colors","textColor","medium","shade","_shade","backgroundStyle","textColorArg","lastIndexOf","_backgroundAndTextCol","image","repeat","position","size","activeStyle","props","active","selectedStyle","selected","getHoverIndicatorStyle","hoverIndicator","hover"],"mappings":"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","sourcesContent":["import { css } from 'styled-components';\nimport { colorIsDark, getRGBA, normalizeColor } from './colors'; // evalStyle() converts a styled-components item into a string\n\nvar evalStyle = function evalStyle(arg, theme) {\n  if (arg && Array.isArray(arg) && typeof arg[0] === 'function') {\n    return arg[0]({\n      theme: theme\n    });\n  }\n\n  return arg;\n};\n\nexport var normalizeBackground = function normalizeBackground(background, theme) {\n  // If the background has a light or dark object, use that\n  var result = background;\n\n  if (background) {\n    if (theme.dark && background.dark && typeof background.dark !== 'boolean') {\n      result = background.dark;\n    } else if (!theme.dark && background.light && typeof background.light !== 'boolean') {\n      result = background.light;\n    }\n\n    result = evalStyle(result, theme);\n  }\n\n  return result;\n};\nexport var backgroundIsDark = function backgroundIsDark(backgroundArg, theme) {\n  var background = normalizeBackground(backgroundArg, theme);\n  var result;\n\n  if (background) {\n    if (typeof background === 'object') {\n      var color = background.color,\n          dark = background.dark,\n          opacity = background.opacity;\n\n      if (typeof dark === 'boolean') {\n        result = dark;\n      } else if (color && ( // weak opacity means we keep the existing darkness\n      !opacity || opacity !== 'weak')) {\n        var backgroundColor = normalizeColor(background.color, theme);\n\n        if (backgroundColor) {\n          result = colorIsDark(backgroundColor);\n        }\n      }\n    } else {\n      var _color = normalizeColor(background, theme);\n\n      if (_color) {\n        result = colorIsDark(_color);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar darkContext = function darkContext(backgroundColor) {\n  var isDark = colorIsDark(backgroundColor);\n  if (isDark === undefined) return undefined;\n  return isDark ? 'dark' : 'light';\n}; // Returns an array of two CSS colors: [background, color]\n// Either could be undefined.\n// background could be a CSS gradient, like \"linear-gradient(...)\"\n\n\nexport var backgroundAndTextColors = function backgroundAndTextColors(backgroundArg, textArg, theme) {\n  if (!backgroundArg) return [undefined, textArg];\n  var global = theme.global;\n  var background = normalizeBackground(backgroundArg, theme);\n  var text = textArg || global.colors.text;\n  var backgroundColor;\n  var textColor;\n\n  if (typeof background === 'object') {\n    if (background.dark === false) {\n      textColor = text.light || text;\n    } else if (background.dark) {\n      textColor = text.dark || text;\n    }\n\n    if (background.color) {\n      var color = normalizeColor(background.color, theme, background.dark);\n      var opacity = background.opacity === true ? global.opacity.medium : global.opacity[background.opacity] || background.opacity;\n      backgroundColor = getRGBA(color, opacity) || color; // If we don't have a textColor already, and we aren't too translucent,\n      // set the textColor to have the best contrast against the background\n      // color.\n\n      if (!textColor && (opacity === undefined || opacity > 0.3)) {\n        var shade = darkContext(backgroundColor, theme);\n        textColor = normalizeColor(shade && text[shade] || text, theme);\n      }\n    }\n  } else {\n    backgroundColor = normalizeColor(background, theme);\n\n    var _shade = darkContext(backgroundColor, theme);\n\n    if (_shade) {\n      textColor = normalizeColor(text[_shade] || text, theme, _shade === 'dark');\n    } else {\n      // If we can't determine the shade, we assume this isn't a simple color.\n      // It could be a gradient. backgroundStyle() will take care of that case.\n      if (backgroundColor !== 'transparent') backgroundColor = undefined;\n      if (text) textColor = normalizeColor(text, theme);\n    }\n  } // if textArg is false, we don't want the textColor, used for Button hover\n\n\n  if (textArg === false) textColor = undefined;\n  return [backgroundColor, textColor];\n};\nexport var backgroundStyle = function backgroundStyle(backgroundArg, theme, textColorArg) {\n  // for Grommet component, if the background isn't defined, don't set it\n  if (backgroundArg === undefined) return undefined;\n  var background = normalizeBackground(backgroundArg, theme);\n\n  if (typeof background === 'string' && background.lastIndexOf('url', 0) === 0) {\n    return css([\"background:\", \" no-repeat center center;background-size:cover;\"], background);\n  }\n\n  var _backgroundAndTextCol = backgroundAndTextColors(background, textColorArg, theme),\n      backgroundColor = _backgroundAndTextCol[0],\n      textColor = _backgroundAndTextCol[1];\n\n  if (background.image) {\n    // allow both background color and image, in case the image doesn't fill\n    return css([\"background-image:\", \";background-repeat:\", \";background-position:\", \";background-size:\", \";\", \" \", \"\"], background.image, background.repeat || 'no-repeat', background.position || 'center center', background.size || 'cover', backgroundColor ? \"background-color: \" + backgroundColor + \";\" : '', textColor ? \"color: \" + textColor + \";\" : '');\n  }\n\n  if (backgroundColor) {\n    return css([\"background-color:\", \";\", \"\"], backgroundColor, textColor ? \"color: \" + textColor + \";\" : '');\n  }\n\n  if (typeof background === 'string') // This case takes care of gradients\n    // or theme colors that use CSS names like 'crimson' that we don't parse\n    return css([\"background:\", \";\"], normalizeColor(background, theme));\n  return undefined;\n};\nexport var activeStyle = css([\"\", \"\"], function (props) {\n  return backgroundStyle(normalizeColor(props.theme.global.active.background, props.theme), props.theme, props.theme.global.active.color);\n});\nexport var selectedStyle = css([\"\", \"\"], function (props) {\n  return backgroundStyle(normalizeColor(props.theme.global.selected.background, props.theme), props.theme, props.theme.global.selected.color);\n});\nexport var getHoverIndicatorStyle = function getHoverIndicatorStyle(hoverIndicator, theme) {\n  var background;\n\n  if (hoverIndicator === true || hoverIndicator === 'background') {\n    background = theme.global.hover.background;\n  } else {\n    background = hoverIndicator;\n  }\n\n  return css([\"\", \"\"], backgroundStyle(background, theme, theme.global.hover.color));\n};"]},"metadata":{},"sourceType":"module"}