{"ast":null,"code":"var _jsxFileName = \"/Users/tessie/Documents/mediary-graphql/client/src/components/Authentication/Login.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Hide, View } from \"grommet-icons\";\nimport { Box, Form, FormField, TextInput, Button } from \"grommet\";\nimport { Spinning } from \"grommet-controls\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [reveal, setReveal] = React.useState(false);\n  const [isButtonDisabled, setButtonDisabled] = useState(true);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    if (email.trim() && password.trim()) {\n      setButtonDisabled(false);\n    } else {\n      setButtonDisabled(true);\n    }\n  }, [email, password]);\n\n  const handleLogin = async () => {\n    setLoading(true);\n    const response = {\n      code: 200\n    };\n\n    if (response.code === 200) {//login\n    } else {\n      setError(\"Invalid credentials.\");\n    }\n  };\n\n  const handleKeyPress = e => {\n    if (e.keyCode === 13 || e.which === 13) {\n      isButtonDisabled || handleLogin();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    htmlFor: \"emailInput\",\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    plain: true,\n    id: \"emailInput\",\n    onChange: e => setEmail(e.target.value),\n    onKeyPress: e => handleKeyPress(e),\n    name: \"email\",\n    value: email,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormField, {\n    htmlFor: \"passwordInput\",\n    label: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    width: \"medium\",\n    direction: \"row\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    plain: true,\n    id: \"passwordInput\",\n    onChange: e => setPassword(e.target.value),\n    onKeyPress: e => handleKeyPress(e),\n    name: \"password\",\n    value: password,\n    type: reveal ? \"text\" : \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    icon: reveal ? /*#__PURE__*/React.createElement(View, {\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 30\n      }\n    }) : /*#__PURE__*/React.createElement(Hide, {\n      size: \"medium\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 55\n      }\n    }),\n    onClick: () => setReveal(!reveal),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    size: \"large\",\n    label: isLoading ? /*#__PURE__*/React.createElement(Spinning, {\n      kind: \"circle\",\n      color: \"active\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 30\n      }\n    }) : \"SIGN IN\",\n    onClick: () => handleLogin(),\n    disabled: isButtonDisabled,\n    margin: \"0 20px 0 0\",\n    \"min-width\": \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/auth/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Create an Account\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/tessie/Documents/mediary-graphql/client/src/components/Authentication/Login.tsx"],"names":["React","useEffect","useState","Link","Hide","View","Box","Form","FormField","TextInput","Button","Spinning","Login","email","setEmail","password","setPassword","reveal","setReveal","isButtonDisabled","setButtonDisabled","isLoading","setLoading","error","setError","trim","handleLogin","response","code","handleKeyPress","e","keyCode","which","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Hide, View } from \"grommet-icons\";\nimport { Box, Form, FormField, TextInput, Button } from \"grommet\";\nimport { Spinning } from \"grommet-controls\";\n\nconst Login: React.FC = () => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [reveal, setReveal] = React.useState(false);\n  const [isButtonDisabled, setButtonDisabled] = useState<boolean>(true);\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (email.trim() && password.trim()) {\n      setButtonDisabled(false);\n    } else {\n      setButtonDisabled(true);\n    }\n  }, [email, password]);\n\n  const handleLogin = async (): Promise<void> => {\n    setLoading(true);\n    const response = { code: 200 };\n    if (response.code === 200) {\n      //login\n    } else {\n      setError(\"Invalid credentials.\");\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (e.keyCode === 13 || e.which === 13) {\n      isButtonDisabled || handleLogin();\n    }\n  };\n\n  return (\n    <div>\n      {error && <div>{error}</div>}\n      <h1>Sign In</h1>\n      <Form>\n        <FormField htmlFor=\"emailInput\" label=\"Email\">\n          <TextInput\n            plain\n            id=\"emailInput\"\n            onChange={(e): void => setEmail(e.target.value)}\n            onKeyPress={(e): void => handleKeyPress(e)}\n            name=\"email\"\n            value={email}\n            type=\"text\"\n          />\n        </FormField>\n        <br />\n        <FormField htmlFor=\"passwordInput\" label=\"Password\">\n          <Box width=\"medium\" direction=\"row\" align=\"center\">\n            <TextInput\n              plain\n              id=\"passwordInput\"\n              onChange={(e): void => setPassword(e.target.value)}\n              onKeyPress={(e): void => handleKeyPress(e)}\n              name=\"password\"\n              value={password}\n              type={reveal ? \"text\" : \"password\"}\n            />\n            <Button\n              icon={reveal ? <View size=\"medium\" /> : <Hide size=\"medium\" />}\n              onClick={() => setReveal(!reveal)}\n            />\n          </Box>\n        </FormField>\n        <Button\n          primary\n          size=\"large\"\n          label={isLoading ? <Spinning kind=\"circle\" color=\"active\" /> : \"SIGN IN\"}\n          onClick={(): Promise<void> => handleLogin()}\n          disabled={isButtonDisabled}\n          margin=\"0 20px 0 0\"\n          min-width=\"200px\"\n        />\n        \n        <Link to=\"/auth/register\">Create an Account</Link>\n      </Form>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}